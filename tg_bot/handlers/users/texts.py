from aiogram.types import Message, ChatType
from sqlalchemy.ext.asyncio import AsyncSession

from tg_bot.loader import dp
from tg_bot.keyboards.users.inline import premium_markup, buy_premium_markup
from tg_bot.db_api.crud.users import get_user
from tg_bot.utils.settings import parse_settings


@dp.message_handler(commands="rules", chat_type=ChatType.PRIVATE)
@dp.message_handler(text="üìï –ü—Ä–∞–≤–∏–ª–∞", chat_type=ChatType.PRIVATE)
async def rules_handler(message: Message):
    await message.answer("<i>üìå –ü—Ä–∞–≤–∏–ª–∞ –æ–±—â–µ–Ω–∏—è –≤ –∞–Ω–æ–Ω–∏–º–Ω–æ–º —á–∞—Ç–µ:\n\n"
                         "1. –õ—é–±—ã–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø—Å–∏—Ö–æ–∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–µ—â–µ—Å—Ç–≤ (–Ω–∞—Ä–∫–æ—Ç–∏–∫–æ–≤)\n"
                         "2. –û–±—Å—É–∂–¥–µ–Ω–∏–µ –ø–æ–ª–∏—Ç–∏–∫–∏\n"
                         "3. –î–µ—Ç—Å–∫–∞—è –ø–æ—Ä–Ω–æ–≥—Ä–∞—Ñ–∏—è ('–¶–ü')\n"
                         "4. –ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ (Scam)\n"
                         "5. –õ—é–±–∞—è —Ä–µ–∫–ª–∞–º–∞, —Å–ø–∞–º\n"
                         "6. –†–∞—Å—Å–æ–≤–∞—è, –ø–æ–ª–æ–≤–∞—è, —Å–µ–∫—Å—É–∞–ª—å–Ω–∞—è, –∏ –ª—é–±–∞—è –¥—Ä—É–≥–∞—è –¥–∏—Å–∫—Ä–∏–º–∏–Ω–∞—Ü–∏—è\n"
                         "7. –ü—Ä–æ–¥–∞–∂–∏ —á–µ–≥–æ –ª–∏–±–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä - –ø—Ä–æ–¥–∞–∂–∞ –∏–Ω—Ç–∏–º–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π, –≤–∏–¥–µ–æ)\n"
                         "8. –õ—é–±—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –Ω–∞—Ä—É—à–∞—é—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞ Telegram\n"
                         "9. –û—Å–∫–æ—Ä–±–∏—Ç–µ–ª—å–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ\n\n"
                         "<b>‚ùå –ó–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª - –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞</b></i>")


@dp.message_handler(commands="prem", chat_type=ChatType.PRIVATE)
@dp.message_handler(text="üëë Premium —Å—Ç–∞—Ç—É—Å", chat_type=ChatType.PRIVATE)
async def premium_handler(message: Message, session: AsyncSession):
    user = await get_user(session, message.from_user.id)

    premium_settings = parse_settings()["premium"]

    if user.premium is None:
        await message.answer(
            "<i><b>üëë –ü–æ–ª—É—á–∏—Ç–µ Premium-—Å—Ç–∞—Ç—É—Å: </b>\n\n"
            "üîç –ò—â–∏—Ç–µ –ø–æ –ø–æ–ª—É (–º/–∂, 18+)\n"
            "üì± –ü–æ–ª–Ω–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º—ã</i>",
            reply_markup=buy_premium_markup(
                premium_settings["day"],
                premium_settings["week"],
                premium_settings["month"],
                premium_settings["all"])
        )
    else:
        await message.answer(
            f"<b>üëë Premium-—Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–µ–Ω –¥–æ {user.premium.strftime('%d.%m.%Y %H:%M')}</b>",
            reply_markup=premium_markup)


@dp.message_handler(commands="profile", chat_type=ChatType.PRIVATE)
@dp.message_handler(text="üë®‚Äçüíª –ü—Ä–æ—Ñ–∏–ª—å", chat_type=ChatType.PRIVATE)
async def profile_handler(message: Message, session: AsyncSession):
    user = await get_user(session, message.from_user.id)

    smile = "üôé‚Äç‚ôÇ" if user.sex == "man" else "üôç‚Äç‚ôÄ"
    sex = "–ú" if user.sex == "man" else "–ñ"
    premium = "–ï—Å—Ç—å" if user.premium is not None else "–ù–µ—Ç"

    await message.answer(
        f"<b>üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å</b> (<code>{message.from_user.id}</code>)\n\n"
        f"<b>{smile} –ü–æ–ª</b>: <code>{sex}</code>\n"
        f"<b>üîû –í–æ–∑—Ä–∞—Å—Ç</b>: <code>{user.age}</code>\n\n"
        f"<b>üëë –ü—Ä–µ–º–∏—É–º-—Å—Ç–∞—Ç—É—Å:</b> <code>{premium}</code>\n\n"
        f"<b>üì´ –í—Å–µ–≥–æ –¥–∏–∞–ª–æ–≥–æ–≤:</b> <code>{user.total_dialogs}</code>\n"
        f"<b>üì§ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π:</b> <code>{user.total_messages}</code>"
    )
